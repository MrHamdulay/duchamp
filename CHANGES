Duchamp version 1.1.1 (2007/07/20)
------------------------------------

Minor update to the release, with just a few changes:

* The verification script was generating diffs due to differences in
  the precision of some calculations when done on different machines. 
  One of these was the integrated flux, and this has been corrected so
  that the same value should appear on all machines.
  The verification script has also changed so that just the number of
  sources and their positions are tested, as well as the
  logfiles. This should avoid the reporting of spurious differences.

* The grey-scale used in the image cutouts (in the spectral plots) has
  been inverted. This makes it consistent with the scale used in the
  maps, and hopefully easier to see when printing.

* The configure/make system has been altered so that it is possible to
  compile Duchamp on a system that does not have PGPLOT installed. In
  this case, Duchamp will run as normal, just without any graphical
  output. This entailed some restructuring of some files. 

* The time of completion is now written to the log file, so that the
  user can have some idea of how long the program took.


Duchamp version 1.1 (2007/05/17)
------------------------------------

Changes made since the last numbered release:

EFFICIENCY OF EXECUTION:

* Major change to the way detections are stored. They are now recorded
  via run-length encoding in the x-y plane, and stored as collections
  of channel-maps. This improves the memory usage and the speed of
  execution (particularly for routines such as the merging
  routines). The memory usage has also been improved by changing the
  way the list of detected objects is stored.

SMOOTHING:

* Addition of ability to spatially smooth the cube before
  searching. This is done with a Gaussian kernel, the size and shape
  of which can be specified by the user, using the parameters kernMaj
  & kernMin (which are the FWHM for the major & minor axes -- if
  kernMin is not given it is assumed to match kernMaj) and kernPA (the
  position angle of the major axis).  There is a new parameter
  smoothType that distinguishes this method from the spectral (Hanning)
  smoothing already in use.

DETECTIONS:

* Changed the way detection is done -- now only search in 2D images,
  keeping all detections (ie. no minimum-pixel requirement). This
  should be the same as doing both the 1D and 2D searches with the
  minimum pixel requirement in, but simpler. The rejection is done at
  the end after all the merging and growing has been done. This leads
  to a larger number of intermediate detections (ie.  the number
  before merging), which may increase the run-time slightly, although
  this is offset by the changes to the efficiency (see above).

* Increased the range over which objects can be grown to match the
  threshSpatial & threshVelocity parameters, as well as rejecting new
  pixels based on the BLANK and MW tests.

INPUTS:

* There has been a subtle change in the way BLANK pixels are dealt
  with. To enable trimming of BLANK pixels, users should use the new 
  parameter flagTrim. The parameters flagBlankPix and blankPixVal are
  no longer accessible via the parameter file -- warning messages are
  given if they are provided in the parameter file.

* Added ability to specify a statsec, so that the statistics are only
  calculated from a given subsection of the cube, rather than the full
  cube.

* The subsections can also specify the ability to remove a border of n
  pixels from the edges of an axis (ie. n from the start and from the
  end) -- as requested in Trac ticket #5.

* Changed the default value of the reconDim parameter from 3 to 1, and
  the default value of the flagATrous parameter to false.

OUTPUTS:

* The output now includes three different estimates of the "centre" of
  the detection: peak location, centroid (flux-weighted), or average. 

* Some slight improvements to the user feedback during execution.

* Spectral output now includes the baseline, if one was fitted. The
  format of the plot headers is slightly changed, to stop information
  falling off the edge of the page.

* Added command-line option -x to directly disable the PGPLOT X-window
  map plotting. This overrides the setting of flagXOutput in the
  parameter file.

* Fallback spectral units (in case the FITS header fails to record
  them) changed to SPC, but code has been fixed so that any problem
  should be caught before this becomes an issue.

BUGFIXES:

* Fixed bug (Trac ticket #4) that meant the velocity units were not
  correctly dealt with. Duchamp should be more robust for different
  velocity axis setups now.

* Fixed bug (ticket #9) with the VOTable output, where the tags were
  not closing.

* Fixed a bug that meant the integrated fluxes were not calculated
  properly -- no allowance was made for the number of spatial
  pixels. This should also work properly for 2D images now as well.

* Fixed minor bug in calculating the flux threshold from the p-value
  threshold when the FDR method is used. This did not affect the
  actual thresholding, merely the quoted flux threshold in the results
  file. Also, the MW channels are kept out of the p-value threshold
  determination if they are being flagged.



Duchamp version 1.0.7 (2006/11/22)
----------------------------------

One new feature, and some improvements and bug-fixes.

* The user can now elect to Hanning-smooth the spectral direction of
  the cube before the searching is done. This can be done instead of the
  wavelet reconstruction (although if both are selected, the
  reconstruction takes precendence). This functionality is switched on
  and off by the flagSmooth parameter, and the width of the Hanning
  kernel is governed by the hanningWidth parameter.

* The smoothed array can also be written to a FITS file and read in at
  the start in the same manner as the reconstructed array.

* Several improvements have been made to the memory
  management. Several memory leaks were fixed, and the memory usage of
  Duchamp is considerably less, which will be a help for running it on
  large cubes. The speed of some routines has also been improved, by
  removing unnecessarily repetitive loops.

* The sorting routines have been changed, and should now be slightly quicker
  (and a bit more robust).

* Enabled the scale bar (plotted on the 0th moment map in the spectral
  output file) to be able to deal with much finer spatial scales (as
  may be expected from VLBI data).

* Other minor changes to code and presentation.


Duchamp version 1.0.6 (2006/11/01)
----------------------------------

Some incremental improvements and changes to the code:

* The statistics used for the detection are now calculated once for
  the entire cube, rather than being calculated separately for each
  channel map and spectrum. This results in a uniform threshold value
  across the entire cube. The way the statistics calculations are
  implemented in the code was changed, using a new statistics class.

* This means we can report a peak signal-to-noise value for each
  detection. This is given in the text-based output, as well as in the
  summary information above the spectral output for each source.

* The user can now elect not to have the moment map displayed in a
  PGPlot window, through the use of the new flagXOutput
  parameter. This should help in cases of running Duchamp on a dumb
  terminal (with no X-display capabilities), or as part of a batch
  script where the continual popping-up of the PGPlot window might
  become annoying. 

* There are different Flags reported for the case of an object lying on
  the spatial edge and spectral edge of the cube (E and S respectively).

* A few minor bug fixes:
  - When providing a subsection, any axes with the range given by *
    had the pixel values offset incorrectly. This has been fixed.
  - Negative searches now correctly invert the reconstructed array
    when it is read in from a file.

* Other minor changes to the code, to improve memory handling and
  remove redundant arrays and variables.


Duchamp version 1.0.5 (2006/09/06)
----------------------------------

Since version 1.0, there have been a range of mostly minor
changes. These are generally bug-fixes, thanks to feedback from a
number of users, as well as a few extra features. 

Here is a summary of the changes since version 1.0:

USER INTERFACE:

* The user is now able to enter the value of flag parameters in the
  parameter file as strings, as well as integers (so one can enter
  true or 1 to give the same result).

GRAPHICAL OUTPUT:

* Added a new function that draws the edge of the blank region on the
  maps and image cutouts. There is a new flag parameter --
  drawBlankEdges -- that controls the use of this function (the
  default is true).
  Also, the edge of the field is plotted on the image cutouts as a
  yellow line. This distinguishes it from the purple blank pixel
  dividing line.

* The size of the tick mark in the image cutout (indicating the
  spatial scale of the image) is now adaptable, so that it shows the
  scale that best fits the image (ranging from 1 arcsec to 15
  degrees). (This is a change from the previous standard length of 15
  arcmin.)

* The zoomed spectrum had its flux scale determined by all points in
  the zoom box,including those flagged by the Milky Way (MW)
  range. This has been fixed so that any MW channels will not affect
  the flux scaling, potentially improving the appearance of objects
  detected close in velocity to strong MW emission or absorption.

* Improved Karma Annotation file output, so that files without good 
  WCS are dealt with appropriately.

TEXT-BASED OUTPUT:

* The position resolution in the IAU-format names has been increased,
  so that distinct objects close to one another are more readily
  distinguished.  Overlapping sources at different velocities may
  still have the same name, but this is a more general problem.

* The presentation of the results in tabular format has been improved,
  so that the precision of faint sources is sufficient to show their
  flux, for instance, is not 0. This also applies to the information 
  presented above the spectral plots.

* Improved error and warning reporting, so that the formatting and
  presentation of information is clearer.

FITS I/O RELATED:

* The previous version was did not deal well with 4 (or greater)
  dimensions in the FITS file -- the memory allocation was badly done,
  and the axes needed to be in a particular order. This has been
  fixed, so that the FITS I/O routines can now handle any sized FITS
  file, with axes in any order (as long as there are two spatial and one
  spectral axes).

* When the FITS file does not have a rest frequency defined, there is
  no way to transform the frequency axis into velocity. In this case,
  the spectral axis is left as frequency, and put into units of MHz.

* If the beam size is not indicated by the FITS header (through the
  BMAJ and BMIN keywords), the user can manually specify the size
  through the parameter file (using parameter beamSize).

* The FITS I/O routines make use of the command fits_file_exists. This
  was introduced into the CFITSIO package from version 2.5, so Duchamp
  will only work with this version or higher. Version 3+ is preferred.

OTHER BUG-FIXING:

* Several bugs related to the blank-pixels were dealt with.
  The correct values were not propagating through correctly, meaning
  that the default values were being used. Also, there was the
  potential for blank pixels to be detected when the FDR method was
  used. Finally, the image cutout displays occasionally did not
  obscure the blank pixels. All these problems should be fixed now.

* The FDR setup routine was occasionally failing with a segmentation
  fault, due to it accessing unallocated memory. This has been fixed. 

* Fixed bugs that affected the way 2D images (rather than 3D cubes)
  were dealt with. The minChannels test failed when minChannels=0.

* If there is no beam information in the FITS header, the user can now
  enter a beam size as a parameter.

* Other minor fixes to the code, to improve its structure and
  robustness.


Duchamp version 1.0 (2006/06/30)
--------------------------------

The first full release version.

Several major changes compared to previous version:

* Incorporated a FitsHeader class, to keep track of header information
  (including WCS) from the FITS file. All units-related calculations
  are done with this class, such as conversion to velocity, and
  pixel-to-WCS conversion.  The main advantage of this is improved
  speed of execution, more adaptable to different units, and improved
  code (easier for me!).

* Able to select the dimensionality of the reconstruction, rather than
  just doing it in 3-D.

* Robust text output, so that the columns are sized correctly given
  the data being written, and the relevant units (derived from the
  FITS header) are included in the output table.

* Improved the way the reconstructed image is saved and read back in,
  with a better naming scheme and a better set of new FITS header
  keywords. The MW headers are now not written.

Other, more minor changes include:

* MW channels now not set to 0, but just ignored for searching
  purposes (and for the scaling of the spectral output -- they are
  plotted though and highlighted with a hashed box).

* The scale bar in the moment map in the spectral output file has its
  length indicated.

* Improved VOTable output, with more information about the way Duchamp
  was run.

* Made sure all statistics calculations in the reconstruction are
  based on robust (ie. median) methods.

Also moved to an autoconf based configure/make compilation, for ease of use.


Duchamp version 0.9.2 (2006/06/27)
--------------------------------

* Added the use of warning flags for detections: for either edge
  location or negative enclosed flux.

* A new command line option added so that the user can specify a FITS
  file to be searched with the default parameters, rather than giving
  a full parameter file.

* The scale bar on the moment cutout now works in general case, using
  an iterative process to get to the correct length.

* RA axes are now done correctly on the full-scale maps.

* Various coding fixes, improving the readability of the code,
  particularly regarding the declaration of temporary variables.

* Changed the way the time of execution is called : now using time.h
  functions, rather than a system call.

* Changed output in Detection/outputDetection.cc for the pixel
  information of detected objects (the info printed above the spectral
  plots) -- now print out number of voxels in object, and have
  improved the formatting a little.

* Improved the functionality of saving the FITS file containing the
  reconstructed array. Added ability to save and read back in the MW
  parameters when saving a reconstructed cube (if a reconstructed cube
  has different MW range to that being considered, it would cause
  problems). ReadRecon now just returns a FAILURE and will reconstruct
  the cube anew.

* Changed default value of flagGrowth to 0. 



Duchamp version 0.9 (2006/05/05)
--------------------------------

First public release version.
