# FULL PARAMETER LIST
# -------------------
# 
# This file contains the full list of user-definable parameters. They are 
#  grouped here according to their use, and the values quoted are the defaults:
#  if a given parameter is not included in your parameter file, this is the 
#  value it will take.
#
#
# INPUT RELATED
# imageFile -- the FITS image.
# flagSubsection -- whether to get a subsection of that image. 
# subsection -- the subsection to read in, in format [x1:x2,y1:y2,z1:z2],
#               or * to indicate the full range 
# flagReconExists -- set to true if the reconstructed image exists as a FITS 
#                    file (ie. it has been saved from a previous Duchamp run)
# reconFile -- the location of the FITS file containing the reconstructed image

imageFile       your-file-here
flagSubsection  0
subsection      [*,*,*]
flagReconExists	0
reconFile	your-reconstructed-file-here

# OUTPUT RELATED
# flagLog -- log the intermediate results?   
# logfile-- the file to put that in.
# outFile -- the final output list. 
# spectraFile -- the postscript file of spectra
# flagOutputRecon/Resid -- whether to save the reconstruction & residual arrays
#                          as FITS files
# flagVOT -- make a VOTable file of the results?  
# votFile -- the file to put it in
# flagKarma -- make a Karma annotation file of the results?  
# karmaFile -- the file to put it in
# flagMaps -- save postscript versions of the detection and 0th moment maps?
# detectionMap, momentMap -- the postscript files produced.

flagLog         1
logFile		duchamp-Logfile.txt
outFile		duchamp-Results.txt
spectraFile	duchamp-Spectra.ps
flagOutputRecon	0
flagOutputResid	0
flagVOT         0
votFile         duchamp-Results.xml
flagKarma       0
karmaFile       duchamp-Results.ann
flagMaps        1
detectionMap    duchamp-DetectionMap.ps
momentMap       duchamp-MomentMap.ps

# FIXING UP THE CUBE
# flagBlankPix -- whether to replace & ignore blank pixels. 
# blankPixValue -- what value they should take. This is overridden by 
#                  FITS header information.
# flagBaseline -- whether to subtract spectral baselines before searching
# flagMW -- ignore a range of channels (to remove Milky Way emission)?
# minMW, maxMW -- the first and last channels to be ignored

flagBlankPix    1
blankPixValue	-8.00061
flagMW		0
minMW		75
maxMW		112
flagBaseline    0

# GENERAL DETECTION RELATED
# flagNegative -- Are the features being searched for negative (set to true) 
#                 or positive (false -- the default)?
# snrCut --  How many sigma above mean is a detection when sigma-clipping
# flagGrowth -- Should the detections be "grown" to a lower significance value?
# growthCut -- The lower threshold used when growing detections

flagNegative    0
snrCut		3.
flagGrowth	0
growthCut	2.

# RECONSTRUCTION RELATED
# flagATrous -- Whether or not to do the reconstruction before searching
# reconDim -- The number of dimensions in which to perform the reconstruction.
# scaleMin -- The minimum scale (starts at 1) to be included in the 
#              reconstruction
# snrRecon -- The threshold used in filtering the wavelet coefficient arrays.
# filterCode -- The code number for the choice of filter to be used in the 
#               reconstruction:  1 = B3-spline filter, 2 = Triangle function, 
#                                3 = Haar wavelet. Other numbers default to 2.

flagATrous	1
reconDim        3
scaleMin	1
snrRecon	4.
filterCode      1

# FALSE DISCOVERY RATE METHOD
# flagFDR -- Whether or not to use the false discovery rate method instead of 
#   simple sigma clipping.
# alphaFDR -- The "alpha" parameter for the FDR method -- what desired 
#             percentage of discoveries will be false. Expressed as a decimal.

flagFDR 	0
alphaFDR	0.01

# MERGING PARAMETERS
# flagAdjacent -- Whether to use the "adjacent criterion" to judge if objects 
#                  are to be merged.
# threshSpatial -- If flagAdjacent=false, this is the maximum spatial 
#                   separation between objects for them to be merged.
# threshVelocity -- The maximum channel separation between objects for them 
#                   to be merged.
# minChannels -- The minimum number of consecutive channels an object must have
#                 for it to be accepted.
# minPix -- Minimum number of spatial pixels a detected object must have for 
#            it to be counted

flagAdjacent	1
threshSpatial	3
threshVelocity	7
minChannels	3
minPix		2

# OTHER PARAMETERS
# verbose -- whether to provide progress indicators on the terminal during 
#             execution
# drawBorders -- whether to draw borders around the detections on the moment 
#                 maps in the output.
# drawBlankEdges -- whether to draw an outline around any BLANK regions in the
#                    moment maps and image cutouts.
# spectralMethod -- how to plot the spectra in the output -- the spectrum of 
#                    the peak pixel ("peak" -- the default), or integrated over
#                    all spatial pixels present ("sum")
# spectralUnits -- what units you want the spectral axis to be plotted in and 
#                   values quoted in (including the units of integrated flux)

verbose         1
drawBorders	1
drawBlankEdges  1
spectralMethod  peak
spectralUnits   km/s
